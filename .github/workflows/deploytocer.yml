name: Deploy to ECR

on:
  push:
    branches:
      - Trigger-GitHub-Action-to-Push-Images

jobs:
  build:
    name: Build and Deploy Images to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set aws_session_token $AWS_SESSION_TOKEN
          aws configure set region us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Create MySQL Repository if it doesn't exist
        run: |
          aws ecr describe-repositories --repository-names my-mysql-repo || aws ecr create-repository --repository-name my-mysql-repo

      - name: Create WebApp Repository if it doesn't exist
        run: |
          aws ecr describe-repositories --repository-names my-webapp-repo || aws ecr create-repository --repository-name my-webapp-repo

      - name: Build, Tag, and Push MySQL Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          MYSQL_ECR_REPOSITORY: my-mysql-repo
          MYSQL_IMAGE_TAG: latest
        run: |
          echo "Building MySQL Image..."
          docker build -f GitHub-Action-To-ECR/Dockerfile_mysql -t $ECR_REGISTRY/$MYSQL_ECR_REPOSITORY:$MYSQL_IMAGE_TAG .

          echo "Pushing MySQL Image to ECR..."
          docker push $ECR_REGISTRY/$MYSQL_ECR_REPOSITORY:$MYSQL_IMAGE_TAG

      - name: Build, Tag, and Push WebApp Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          WEBAPP_ECR_REPOSITORY: my-webapp-repo
          WEBAPP_IMAGE_TAG: latest
        run: |
          echo "Building WebApp Image..."
          docker build -f GitHub-Action-To-ECR/Dockerfile -t $ECR_REGISTRY/$WEBAPP_ECR_REPOSITORY:$WEBAPP_IMAGE_TAG .

          echo "Pushing WebApp Image to ECR..."
          docker push $ECR_REGISTRY/$WEBAPP_ECR_REPOSITORY:$WEBAPP_IMAGE_TAG
